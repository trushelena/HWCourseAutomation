{
	"info": {
		"_postman_id": "7921a129-a49e-4b00-aeb0-a286cb31fbfc",
		"name": "TheCatsAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3822151"
	},
	"item": [
		{
			"name": "/imeges/search",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/images/search",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"images",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "/images/upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"    const imageId = pm.response.json().id;\r",
							"    const sub_id = pm.response.json().sub_id;\r",
							"\r",
							"    pm.expect(imageId).to.be.not.empty\r",
							"    pm.collectionVariables.set(\"theCatPicId\", imageId);\r",
							"    pm.collectionVariables.set(\"subId\", sub_id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "multipart/form-data",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/Viktor/Desktop/2Jn-xmTIP.jpg"
						},
						{
							"key": "sub_id",
							"value": "1245",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/images/upload",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"images",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "/images/:image_id/breeds",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"breed_id\": \"{{theCatBreed}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/images/{{theCatPicId}}/breeds",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"images",
						"{{theCatPicId}}",
						"breeds"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image_id\":\"{{theCatPicId}}\",\r\n    \"sub_id\":\"{{subId}}\",\r\n    \"value\": 7\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/votes",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"votes"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favorites",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image_id\":\"{{theCatPicId}}\",\r\n    \"sub_id\":\"{{subId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/favourites",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"favourites"
					]
				}
			},
			"response": []
		},
		{
			"name": "/images",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const resp = pm.response.json()\r",
							"        .find(x => x.id === pm.collectionVariables.get(\"theCatPicId\"));\r",
							"    \r",
							"    console.log(resp);\r",
							"\r",
							"    const breeds = resp.breeds.map(x => x.id);\r",
							"    console.log(breeds);\r",
							"\r",
							"    pm.expect(breeds).to.include(pm.collectionVariables.get(\"theCatBreed\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/images",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"images"
					]
				}
			},
			"response": []
		},
		{
			"name": "/favourites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const resp = pm.response.json()\r",
							"        .filter(x => x.sub_id === pm.collectionVariables.get(\"subId\"));\r",
							"\r",
							"    console.log(resp);\r",
							"\r",
							"    const result = resp.map(item => item.image_id);\r",
							"    console.log(result);\r",
							"    \r",
							"    pm.expect(result).to.include(pm.collectionVariables.get(\"theCatPicId\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/favourites",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"favourites"
					]
				}
			},
			"response": []
		},
		{
			"name": "/votes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"votes with image dates\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const responseJson = pm.response.json();\r",
							"    const selectedItem = responseJson.find(item => item.sub_id === pm.collectionVariables.get(\"subId\"));\r",
							"\r",
							"    console.log(selectedItem);\r",
							"\r",
							"    if (selectedItem && selectedItem.image) {\r",
							"        const imageId = selectedItem.image.id;\r",
							"        console.log(imageId);\r",
							"\r",
							"        pm.expect(imageId).to.include(pm.collectionVariables.get(\"theCatPicId\"));\r",
							"    } else {\r",
							"        console.log(\"No image found for the selected item\");\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Image URLs from votes and /images API match\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    const selectedItem = responseJson.find(item => item.sub_id === pm.collectionVariables.get(\"subId\"));\r",
							"\r",
							"    if (selectedItem && selectedItem.image) {\r",
							"        pm.expect(selectedItem).to.have.property('image');\r",
							"        pm.expect(selectedItem.image).to.have.property('url');\r",
							"\r",
							"        pm.sendRequest({\r",
							"            url: `{{theCatsApiBaseUrl}}/${srelectedItem.image.id}.jpg`,\r",
							"            method: 'GET'\r",
							"        }, function (err, res) {\r",
							"            if (err) {\r",
							"                console.log(\"Error fetching image:\", err);\r",
							"            } else {\r",
							"                const imageUrlFromApi = res.url;\r",
							"                pm.expect(selectedItem.image.url).to.eql(imageUrlFromApi);\r",
							"            }\r",
							"        });\r",
							"    } else {\r",
							"        console.log(\"No image found for the selected item\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/votes?sub_id={{subId}}",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"votes"
					],
					"query": [
						{
							"key": "sub_id",
							"value": "{{subId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/breeds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"   const breeds = pm.response.json().map(item => item.id);\r",
							"    pm.expect(breeds).to.have.length.greaterThan(0);\r",
							"\r",
							"    const randomBreed = breeds[Math.floor(Math.random() * breeds.length)];\r",
							"    console.log(breeds);\r",
							"    console.log(randomBreed);\r",
							"    pm.collectionVariables.set(\"theCatBreed\", randomBreed);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{theCatsApiKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{theCatsApiBaseUrl}}/breeds",
					"host": [
						"{{theCatsApiBaseUrl}}"
					],
					"path": [
						"breeds"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "theCatsApiBaseUrl",
			"value": "https://api.thecatapi.com/v1",
			"type": "string"
		},
		{
			"key": "theCatsApiKey",
			"value": "live_SGDcK0h9ExVPd7s0HKnQAlMdvGwna18Ye056mQR7gLBwajT2Mscfw1Qtr4w53REa",
			"type": "string"
		},
		{
			"key": "theCatPicId",
			"value": "e91-WySvE",
			"type": "string"
		},
		{
			"key": "theCatBreed",
			"value": "aege",
			"type": "string"
		},
		{
			"key": "subId",
			"value": "99"
		},
		{
			"key": "imageId",
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}